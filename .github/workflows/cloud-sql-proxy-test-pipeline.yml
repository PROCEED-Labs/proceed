on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
      issues: write
    environment: Staging
    env:
      MS_TAG: ${{ github.sha }}
      SERVICE_NAME: ${{ inputs.environment == 'Production' && 'ms-server-production' || 'ms-server-staging' }}
      SUBDOMAIN: ${{ inputs.environment == 'Production' && 'app' || 'staging' }}
      ENV: Staging
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - uses: 'google-github-actions/auth@v2'
        with:
          export_environment_variables: true # Exports the service account key as GOOGLE_APPLICATION_CREDENTIALS, we need this for cloud sql auth proxy
          project_id: 'proceed-bpms'
          workload_identity_provider: 'projects/1062024918148/locations/global/workloadIdentityPools/github-ci/providers/github'
          service_account: 'github-actions@proceed-bpms.iam.gserviceaccount.com'

      - name: Configure Cloud SQL Auth Proxy Docker
        run: |
          cat $GOOGLE_APPLICATION_CREDENTIALS > /tmp/key.json
          mkdir -p "$HOME/cloudsql"
          chmod 777 "$HOME/cloudsql"
          docker run  --name cloud-sql-auth-proxy -v /$HOME/cloudsql:/tmp/cloudsql -v /tmp/key.json:/tmp/key.json --user "$(id -u):$(id -g)" gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.3 --unix-socket=/tmp/cloudsql --credentials-file /tmp/key.json ${{secrets.INSTANCE_CONNECTION_NAME}}

          echo "DATABASE_URL=postgresql://${{ secrets.CLOUD_SQL_DB_USER }}:${{secrets.CLOUD_SQL_DB_PASS}}@$localhost:5432/${{ secrets.CLOUD_SQL_DB_NAME }}?host=/cloudsql/${{secrets.INSTANCE_CONNECTION_NAME}} >> $GITHUB_ENV

      - name: Install Prisma
        run: yarn add prisma @prisma/client

      - name: Apply Prisma Migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          yarn dev-ms-db-deploy

      - name: deploy cloud run
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          image: 'docker.io/proceed/ms-server:${{ env.MS_TAG }}'
          flags: '--add-cloudsql-instances=${{secrets.INSTANCE_CONNECTION_NAME}}'
          env_vars: |
            NEXTAUTH_URL=https://${{ env.SUBDOMAIN }}.proceed-labs.org
            DATABASE_URL=${{ env.DATABASE_URL }}
            PROCEED_PUBLIC_DEPLOYMENT_ENV=local
          region: 'europe-west1'
          revision_traffic: LATEST=100
