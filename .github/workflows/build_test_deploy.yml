name: Build, test, and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true

env:
  OUTPUT_PATH_ENGINE_NODE: './build/engine/'
  OUTPUT_PATH_ENGINE_ANDROID: './src/engine/native/android/app/build/outputs/apk/debug/'
  OUTPUT_PATH_MS_SERVER: './src/management-system-v2/.next/'
  DOCKER_PATH_MS_SERVER: './src/management-system-v2'
  FILE_NAME_NODE_ENGINE: 'PROCEED-Engine-0.1.0.zip'
  FILE_NAME_ANDROID: 'PROCEED-Engine-0.1.0.apk'

jobs:
  install:
    runs-on: ubuntu-latest
    # outputs:
    #   compose: ${{ steps.changes.outputs.compose }}
    steps:
      - uses: actions/checkout@v4

      # - uses: dorny/paths-filter@v3
      #   id: changes
      #   with:
      #     filters: |
      #       compose:
      #         - 'docker-compose.yml'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn install --frozen-lockfile --ignore-engines # Remove once node-ipc is removed

      # Cache for this workflow run.
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: cache-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn prettier --check .

  testEngine:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn test-engine --ci

  testEngineE2E:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn test-e2e --ci

  testMS:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn test-ms --ci

  # testE2E:
  #   timeout-minutes: 60
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/cache@v4
  #       timeout-minutes: 2
  #       id: restore-install
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}-${{ github.run_number }}

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         check-latest: true
  #         cache: 'yarn'

  #     - name: Install Playwright Browsers
  #       run: yarn playwright install --with-deps

  #     - name: Run Playwright tests
  #       run: yarn dev-ms-server & sleep 5 && yarn playwright test

  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  buildEngine:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - lint
      - testEngine
      - testEngineE2E
      - testMS
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn build

      - name: Upload engine build
        uses: actions/upload-artifact@v4
        with:
          name: PROCEED_Engine
          path: ${{ env.OUTPUT_PATH_ENGINE_NODE }}
  #  buildEngineAndroid:
  #    runs-on: ubuntu-latest
  #    if: ${{ github.ref == 'refs/heads/main' }}
  #    needs:
  #      - lint
  #      - testEngine
  #      - testEngineE2E
  # steps:
  #   - uses: actions/cache@v4
  #     timeout-minutes: 2
  #     id: restore-install
  #     with:
  #       path: ./*
  #       key: ${{ github.sha }}-${{ github.run_number }}
  #
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #       check-latest: true
  #       cache: 'yarn'
  #
  #   - run: yarn build-android
  #   - run: cp ${{ env.OUTPUT_PATH_ENGINE_ANDROID }}/app-debug.apk ${{ env.BUILD_PATH_ENGINE_ANDROID }}/${{ env.FILE_NAME_ANDROID }}
  #
  #   - name: Upload android engine build
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: PROCEED_Engine_Android
  #       path: ${{ env.OUTPUT_PATH_ENGINE_ANDROID }}/${{ env.FILE_NAME_ANDROID }}

  checkTypes:
    runs-on: ubuntu-latest
    # only run on PRs to check types
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - lint
      - testEngine
      - testEngineE2E
      - testMS
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn build-ms

  buildMS:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    environment: ${{ inputs.environment || 'Staging' }}
    needs:
      - lint
      - testEngine
      - testEngineE2E
      - testMS
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'yarn'

      - run: yarn build-ms

      - name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          image: proceed/ms-server
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          path: ${{ env.DOCKER_PATH_MS_SERVER }}
          tag: ${{ vars.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'Staging' }}
    needs: buildMS
    permissions:
      contents: 'read'
      id-token: 'write'
    #strategy:
    #  matrix:
    #    # Run a job each for the engine and MS server images
    #    include:
    #      - serviceName: engine
    #      - serviceName: management_system
    env:
      MS_TAG: ${{ vars.IMAGE_TAG }}
      SERVICE_NAME: ${{ inputs.environment == 'Production' && 'ms-server-production' || 'ms-server-staging' }}
    steps:
      - uses: actions/cache@v4
        timeout-minutes: 2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: 'proceed-bpms'
          workload_identity_provider: 'projects/1062024918148/locations/global/workloadIdentityPools/github-ci/providers/github'
          service_account: 'github-actions@proceed-bpms.iam.gserviceaccount.com'

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          image: 'docker.io/proceed/ms-server:${{ env.MS_TAG }}'
          region: 'europe-west1'
